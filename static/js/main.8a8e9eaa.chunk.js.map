{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","original","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","messages","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchTopRated","fetchNetFlixOriginals","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","objectFit","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a8e9eaa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n/** base url to make requests to the movie database*/\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  //make a requests to tmbd to fetch movie info\r\n  //code is responsible for fetching data from you url and append it to requests\r\n  //E.g https:://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&language=en-US\r\n  //if [], run once when the row loads , and dont run again.\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  //Add youtube trailer options\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  //When user clicks on picture play trailer\r\n  const handleClick = (movie) => {\r\n    //if video was already open, close the video\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || movie?.title || movie?.original || \"\")\r\n        //https://www.youtube.com/watch?v=XtMThy8QKqu\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          // .get(v) will only pass the value of v into the urlParams so to play the video\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error.messages));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2> {title}</h2>\r\n\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            //Use key so that when browers renders it only changes new content (i.e movie list)\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"b20d0812d47057c2050ff0284840cf61\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchTopRated: `movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetFlixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetFlixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n                )`,\r\n        backgroundPosition: \"top center\",\r\n        objectFit: \"contain\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}{\" \"}\r\n        </h1>\r\n\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n\r\n        <h2 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h2>\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Netflix logo\"\r\n      />\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n        alt=\"avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__content\">\r\n        <div className=\"footer__icons\"></div>\r\n        <div className=\"footer__list\">\r\n          <li className=\"footer__link__wrapper\">Audio and Subtitles</li>\r\n          <li className=\"footer__link__wrapper\">Media Center</li>\r\n          <li className=\"footer__link__wrapper\">Privacy</li>\r\n          <li className=\"footer__link__wrapper\">Contact Us</li>\r\n          <li className=\"footer__link__wrapper\">Audio Description</li>\r\n          <li className=\"footer__link__wrapper\">Investor Relations</li>\r\n          <li className=\"footer__link__wrapper\">Legal Notice</li>\r\n          <li className=\"footer__link__wrapper\">Help Center</li>\r\n          <li className=\"footer__link__wrapper\">Jobs</li>\r\n          <li className=\"footer__link__wrapper\">Cookie Preferences</li>\r\n          <li className=\"footer__link__wrapper\">Gift Cards</li>\r\n          <li className=\"footer__link__wrapper\">Terms of Use</li>\r\n          <li className=\"footer__link__wrapper\">Corporate Information</li>\r\n        </div>\r\n        <div className=\"footer__button\">\r\n          <button>Serivice Code</button>\r\n        </div>\r\n\r\n        <div className=\"footer__copyright\">\r\n          <h5>\r\n            This is a netflix clone, and the purpose of this project was only\r\n            for educational us\r\n          </h5>\r\n          <h5>All video trailers are streamed from Youtube. </h5>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport Row from \"./Row\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX Originals\"\n        fetchUrl={requests.fetchNetFlixOriginals}\n        isLargeRow={true}\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}